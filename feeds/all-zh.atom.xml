<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>YanHua's 365 Days</title><link href="/" rel="alternate"></link><link href="/feeds/all-zh.atom.xml" rel="self"></link><id>/</id><updated>2012-08-21T10:20:00+02:00</updated><entry><title>用 Pelican 搭建 Blog 平台</title><link href="/yong-pelican-da-jian-blog-ping-tai.html" rel="alternate"></link><updated>2012-08-21T10:20:00+02:00</updated><author><name>yanhua</name></author><id>tag:,2012-08-21:yong-pelican-da-jian-blog-ping-tai.html</id><summary type="html">&lt;p&gt;以前我都是使用 &lt;a class="reference external" href="http://tiddlywiki.com/"&gt;TiddlyWiki&lt;/a&gt; 来记录工作中的笔记和心得，TiddlyWiki只有一个HTML文件，小巧简单是它的优势，但是随着内容的增多，管理起来反而不方便了：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;一个复杂的程序（主要是HTML+JS+CSS）和不断增加的内容混合在一起，难于管理，也不能放在版本管理系统中（冲突难以合并）&lt;/li&gt;
&lt;li&gt;难以自动化转换为其他的文档&lt;/li&gt;
&lt;li&gt;用浏览器把文件保存在单一的本地文件中还是不太可靠&lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;，有一次我的磁盘满了，文件内容全丢失了,竟然没有提示&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是还真没发现有什么更好的替代。&lt;/p&gt;
&lt;p&gt;最近喜欢上了 &lt;a class="reference external" href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; 和 &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; 这些轻量级的标记语言，他们非常适合于用来写文章：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;和XML、HTML等对机器友好的标记语言不同，这些标记语言是对人友好的，可读性好&lt;/li&gt;
&lt;li&gt;像写代码一样写文章，不用关心排版，可以专注于内容&lt;/li&gt;
&lt;li&gt;纯文本，加上可读性好，可以放入到版本控制系统中进行管理&lt;/li&gt;
&lt;li&gt;可以随意转换成其它的输出格式，比如doc，pdf等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在有很多的程序可以把这些标记语言写的文本转换为一个静态Blog整站，比如 &lt;a class="reference external" href="http://beiyuu.com/github-pages/"&gt;使用GithubPages建独立博客&lt;/a&gt; 中提到的 &lt;a class="reference external" href="https://github.com/mojombo/jekyll"&gt;Jekyll&lt;/a&gt; 就是用 &lt;a class="reference external" href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; 来生成静态Blog网站的。懒得折腾Ruby了（据说本地搭建 &lt;a class="reference external" href="https://github.com/mojombo/jekyll"&gt;Jekyll&lt;/a&gt; 还有很多陷阱），发现了用Python写的 &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; ，安装和使用确实很简单，终于可以甩掉 &lt;a class="reference external" href="http://tiddlywiki.com/"&gt;TiddlyWiki&lt;/a&gt; 了。&lt;/p&gt;
&lt;p&gt;当然需要了解一些Python的知识，按照 &lt;a class="reference external" href="http://pelican.readthedocs.org/en/3.0/getting_started.html"&gt;Pelican官方文档中的快速开始&lt;/a&gt;  安装、建立目录、然后写reStructuredText文档，最后运行:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
D:\blog&amp;gt;pelican ./content -s pelicanconf.py
&lt;/pre&gt;
&lt;p&gt;这样在output目录就生成HTML文件了。&lt;/p&gt;
&lt;p&gt;本文就是用 &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; 写的，语法除了参考官方文档外，还可以参考 &lt;a class="reference external" href="http://book.42qu.com/rst.html#rst-tutorial"&gt;reStructuredText简明教程&lt;/a&gt; 。用 &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; 和 &lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt; 可以写出结构良好的文档和电子图书，比如：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.worldhello.net/gotgithub/index.html"&gt;GotGitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/"&gt;Python的官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://taoc-zh.readthedocs.org/en/latest/index.html"&gt;TAoC社区的艺术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://book.42qu.com/index.html"&gt;42区漫游指南&lt;/a&gt; &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr class="docutils" /&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;TilldyWiki 把单一的文件保存在本地硬盘中，需要同意浏览器开启本地文件访问的功能，在FireFox和IE下运行良好，在Chrome里需要借助于Java才能访问本地文件。另外，不断增长的备份文件也令人讨厌。&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://book.42qu.com/about.html"&gt;http://book.42qu.com/about.html&lt;/a&gt; 关于我们里还提到了如何进行协作协作，值得参考。&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</summary><category term="Pelican"></category><category term="reStructuredText"></category></entry></feed>